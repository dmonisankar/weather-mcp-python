name: Deploy to IBM Cloud Code Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY_NAMESPACE: your-registry-namespace  # Update this
  IMAGE_NAME: weather-mcp-python
  PROJECT_NAME: weather-mcp-project
  APP_NAME: weather-mcp-server
  REGION: us-south  # Update this to your preferred region

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install IBM Cloud CLI
      run: |
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version

    - name: Install plugins
      run: |
        ibmcloud plugin install code-engine -f
        ibmcloud plugin install container-registry -f

    - name: Login to IBM Cloud
      run: |
        ibmcloud login --apikey ${{ secrets.IBM_CLOUD_API_KEY }} -r ${{ env.REGION }}
        ibmcloud target -g ${{ secrets.IBM_CLOUD_RESOURCE_GROUP }}

    - name: Login to Container Registry
      run: |
        ibmcloud cr login

    - name: Build and push image
      run: |
        REGISTRY_ENDPOINT=$(ibmcloud cr region)
        FULL_IMAGE_NAME="${REGISTRY_ENDPOINT}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        
        docker build -t "$FULL_IMAGE_NAME" .
        docker push "$FULL_IMAGE_NAME"
        
        echo "IMAGE_URL=$FULL_IMAGE_NAME" >> $GITHUB_ENV

    - name: Create or select Code Engine project
      run: |
        if ! ibmcloud ce project get --name ${{ env.PROJECT_NAME }}; then
          ibmcloud ce project create --name ${{ env.PROJECT_NAME }}
        fi
        ibmcloud ce project select --name ${{ env.PROJECT_NAME }}

    - name: Deploy to Code Engine
      run: |
        if ibmcloud ce app get --name ${{ env.APP_NAME }}; then
          # Update existing app
          ibmcloud ce app update \
            --name ${{ env.APP_NAME }} \
            --image ${{ env.IMAGE_URL }} \
            --port 8000 \
            --env CODE_ENGINE=true \
            --cpu 0.25 \
            --memory 0.5G \
            --min-scale 0 \
            --max-scale 10
        else
          # Create new app
          ibmcloud ce app create \
            --name ${{ env.APP_NAME }} \
            --image ${{ env.IMAGE_URL }} \
            --port 8000 \
            --env CODE_ENGINE=true \
            --cpu 0.25 \
            --memory 0.5G \
            --min-scale 0 \
            --max-scale 10
        fi

    - name: Get application URL
      run: |
        APP_URL=$(ibmcloud ce app get --name ${{ env.APP_NAME }} --output json | jq -r '.status.url')
        echo "Application deployed at: $APP_URL"
        echo "Health check: $APP_URL/health"
